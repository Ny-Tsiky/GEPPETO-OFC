//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: my_predict.cpp
//
// MATLAB Coder version            : 5.3
// C/C++ source code generated on  : 29-Dec-2021 17:47:39
//

// Include Files
#include "my_predict.h"
//#include "my_predict_data.h"
//#include "my_predict_initialize.h"
#include "my_predict_internal_types.h"
#include "predict.h"

// Variable Definitions
static coder::ctarget::DeepLearningNetwork mynet;

static boolean_T mynet_not_empty;

// Function Definitions
//
// A persistent object mynet is used to load the series network object.
//  At the first call to this function, the persistent object is constructed and
//  setup. When the function is called subsequent times, the same object is
//  reused to call predict on inputs, thus avoiding reconstructing and reloading
//  the network object.
//
// Arguments    : const double in[10]
//                float out[4]
// Return Type  : void
//
void my_predict(const double in[10], float out[4])
{
  //if (!isInitialized_my_predict) {
    // my_predict_initialize();
  //}
  //if (!mynet_not_empty) {
  //mynet.IsInitialized = false;
  //mynet.matlabCodegenIsDeleted = false;
  //mynet_not_empty = true;
  //}
  //  pass in input
  coder::ctarget::DeepLearningNetwork_predict(&mynet, in, out);
}

//
// A persistent object mynet is used to load the series network object.
//  At the first call to this function, the persistent object is constructed and
//  setup. When the function is called subsequent times, the same object is
//  reused to call predict on inputs, thus avoiding reconstructing and reloading
//  the network object.
//
// Arguments    : void
// Return Type  : void
//
void my_predict_free()
{
  if (!mynet.matlabCodegenIsDeleted) {
    mynet.matlabCodegenIsDeleted = true;
  }
}

//
// A persistent object mynet is used to load the series network object.
//  At the first call to this function, the persistent object is constructed and
//  setup. When the function is called subsequent times, the same object is
//  reused to call predict on inputs, thus avoiding reconstructing and reloading
//  the network object.
//
// Arguments    : void
// Return Type  : void
//
void my_predict_init()
{
  mynet_not_empty = false;
  mynet.matlabCodegenIsDeleted = true;
}

//
// File trailer for my_predict.cpp
//
// [EOF]
//
